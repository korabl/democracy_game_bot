import logging, os
from dotenv import load_dotenv
from openai import AsyncOpenAI

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç OpenAI
client = AsyncOpenAI(api_key=os.getenv("OPENAI_API_KEY"))

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format='%(asctime)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∏—Ä–∞ —á–µ—Ä–µ–∑ GPT
async def generate_world_from_gpt(game_year, model="gpt-4o", max_tokens=800):
    try:
        logger.info("–ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∏—Ä–∞...")  # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ –≥–æ–¥–∞
        if game_year < 0:
            formatted_year = f"{abs(game_year)} –≥–æ–¥ –¥–æ –Ω.—ç."
        else:
            formatted_year = f"{game_year} –≥–æ–¥ –Ω.—ç."

        prompt = f"""
        –í–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π –≥–æ–¥: {formatted_year} 

        –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –Ω–æ–≤—ã–π –º–∏—Ä –¥–ª—è –¥–ª—è {formatted_year} –≥–æ–¥–∞. –ó–∞–±—É–¥—å –≤—Å–µ, –æ —á–µ–º –º—ã –≥–æ–≤–æ—Ä–∏–ª–∏ –¥–æ —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞.
        –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ —ç—Ç–æ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–º –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ - –ø–æ–≥—Ä—É–∑–∏ –∏–≥—Ä–æ–∫–∞ –≤ –º–∏—Ä, —Ä–∞—Å—Å–∫–∞–∂–∏ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∏ –≤—ã–∑–æ–≤–∞—Ö, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —ç—Ç–æ–º—É –≤—Ä–µ–º–µ–Ω–∏. 
        –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω –≤ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —Å—Ç–∏–ª–µ, –Ω–∞–ø–æ–º–∏–Ω–∞—é—â–µ–º –¢–∞—Ä–∞–Ω—Ç–∏–Ω–æ –∏–ª–∏ –ì–∞—è –†–∏—á–∏, —Å –¥—Ä–∞–º–∞—Ç—É—Ä–≥–∏–µ–π, –Ω–æ –±–µ–∑ –≤—ã—Ö–æ–¥–∞ –∑–∞ —Ä–∞–º–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–π —Ñ–∏–∑–∏–∫–∏. 
        –°–æ—Ö—Ä–∞–Ω—è–π –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫—É—é –ø—Ä–∞–≤–¥–æ–ø–æ–¥–æ–±–Ω–æ—Å—Ç—å, –¥–µ–ª–∞—è –º–∏—Ä –Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–º –∏ –ø–æ–≥—Ä—É–∂–∞—é—â–∏–º, —Å —è—Ä–∫–∏–º–∏ —Ñ—Ä–∞–∑–∞–º–∏, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤—Ä–µ–º–µ–Ω–∏.
        
        –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å:
        2. –ü—Ä–æ–±–ª–µ–º—ã –∏ –≤—ã–∑–æ–≤—ã: —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ, –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ, –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ ‚Äî —á—Ç–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∂–∏–∑–Ω—å –ª—é–¥–µ–π? –°–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –º–∏—Ä –±—ã–ª –¥—Ä–∞–º–∞—Ç–∏—á–Ω—ã–º –∏ –æ—â—É—â–∞–ª—Å—è —Ç—è–∂—ë–ª—ã–º.
        3. –ú–µ—Å—Ç–æ –¥–µ–π—Å—Ç–≤–∏—è: –ø—Ä–∏–¥—É–º–∞–π —Å—Ç—Ä–∞–Ω—É, –≥–æ—Ä–æ–¥, –≤–∞–∂–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏, –∫–∞–∫ —Ä–µ–∫–∏, –≥–æ—Ä—ã –∏–ª–∏ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–≥–∏–æ–Ω—ã, –Ω–æ –∏–∑–±–µ–≥–∞–π —Å–≤–µ—Ä—Ö—ä–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ.
        4. –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –∏ —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã: –º–∏—Ñ—ã, —Ä–µ–ª–∏–≥–∏–∏, –∏—Å–∫—É—Å—Å—Ç–≤–æ, –ø–∏—Å—å–º–µ–Ω–Ω–æ—Å—Ç—å ‚Äî –∫–∞–∫ –ª—é–¥–∏ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—é—Ç –º–∏—Ä?
        5. –í–ª–∏—è–Ω–∏–µ —ç–ø–æ—Ö–∏ –Ω–∞ –ª—é–¥–µ–π: –∫–∞–∫ —ç—Ç–æ –≤—Ä–µ–º—è –∏–∑–º–µ–Ω—è–µ—Ç –∂–∏–∑–Ω—å –ø—Ä–æ—Å—Ç—ã—Ö –ª—é–¥–µ–π? –°–¥–µ–ª–∞–π –∞–∫—Ü–µ–Ω—Ç –Ω–∞ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, –±–æ—Ä—å–±—ã –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö.
        6. –î—Ä–∞–º–∞—Ç—É—Ä–≥–∏—è –∏ –Ω–∞–ø—Ä—è–∂—ë–Ω–Ω–æ—Å—Ç—å: —Å–æ–∑–¥–∞–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è, –¥—Ä–∞–º—ã, –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤, —á—Ç–æ–±—ã –º–∏—Ä –±—ã–ª –∂–∏–≤—ã–º –∏ –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–º.
        
        –°–æ–±–µ—Ä–∏ –≤ –Ω–µ–±–æ–ª—å—à–æ–π –∏ –¥–∏–Ω–∞–º–∏—á–Ω—ã–π —Ä–∞—Å—Å–∫–∞–∑ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–±–∑–∞—Ü–µ–≤. –ù–µ —É—Ö–æ–¥–∏ –≤ –∏–∑–ª–∏—à–Ω–∏–µ –¥–µ—Ç–∞–ª–∏, –Ω–æ —Å–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –º–∏—Ä –∫–∞–∑–∞–ª—Å—è —Ä–µ–∞–ª—å–Ω—ã–º, –Ω–∞–ø—Ä—è–∂—ë–Ω–Ω—ã–º –∏ –Ω–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –¥—Ä–∞–º–∞-—ç–Ω–µ—Ä–≥–∏–µ–π.
        """
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–∏ GPT
        response = await client.chat.completions.create(
            model=model,
            messages=[{"role": "user", "content": prompt}],
            max_tokens=max_tokens,
            temperature=0.75
        )
        
        logger.info("–û—Ç–≤–µ—Ç –æ—Ç OpenAI –ø–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∏—Ä–∞ –ø–æ–ª—É—á–µ–Ω.")
        
        world_data = response.choices[0].message.content.strip()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º .content –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        return world_data
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OpenAI –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∏—Ä–∞: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–∏—Ä–∞."
    

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫ –º–∏—Ä–∞ —á–µ—Ä–µ–∑ GPT
async def generate_world_metrics(world_data, model="gpt-4o", max_tokens=1500):
    try:
        logger.info("–ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ—Ç—Ä–∏–∫ –¥–ª—è –º–∏—Ä–∞...")

        json_template = """{
            "economy_metric": N,
            "social_stability_metric": N,
            "ecology_metric": N,
            "security_metric": N,
            "political_support_metric": N
        }"""

        prompt = f"""
        –ù–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –º–∏—Ä–∞, —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ –º–∏—Ä–∞.

        –û–ø–∏—Å–∞–Ω–∏–µ –º–∏—Ä–∞:
        {world_data}

        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏:

        –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:
        1. –≠–∫–æ–Ω–æ–º–∏–∫–∞ [economy_metric] (–≥–¥–µ):
        +10: –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è —Å–≤–µ—Ä—Ö–¥–µ—Ä–∂–∞–≤–∞, –≠–∫–æ–Ω–æ–º–∏–∫–∞ –ø—Ä–æ—Ü–≤–µ—Ç–∞–µ—Ç, –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ –Ω–∞ –≤—ã—Å–æ—Ç–µ, –±–æ–≥–∞—Ç—Å—Ç–≤–æ –≤ —Ä—É–∫–∞—Ö –≤—Å–µ—Ö —Å–ª–æ—ë–≤ –Ω–∞—Å–µ–ª–µ–Ω–∏—è, —Å—Ç—Ä–∞–Ω—ã –∑–∞–≤–∏–¥—É—é—Ç.
        -10: –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å ‚Äî —Å—Ç—Ä–∞–Ω–∞ –æ–±–∞–Ω–∫—Ä–æ—Ç–∏–ª–∞—Å—å, –¥–µ—Ñ–æ–ª—Ç, –ø–æ–ª–Ω–æ–µ —Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ —ç–∫–æ–Ω–æ–º–∏–∫–∏.

        2. –°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å [social_stability_metric] (–≥–¥–µ):
        +10: –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –µ–¥–∏–Ω—Å—Ç–≤–æ, –ø–æ–ª–Ω–æ–µ –µ–¥–∏–Ω—Å—Ç–≤–æ –≤ –æ–±—â–µ—Å—Ç–≤–µ, –Ω–µ—Ç —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –Ω–∞–ø—Ä—è–∂—ë–Ω–Ω–æ—Å—Ç–∏, –Ω–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏.
        -10: –ü–æ–ª–Ω—ã–π –∫–æ–ª–ª–∞–ø—Å, –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∞—è –≤–æ–π–Ω–∞, –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –≤–ª–∞—Å—Ç—å –ø–æ—Ç–µ—Ä—è–Ω–∞, –≥—Ä–∞–∂–¥–∞–Ω–µ –Ω–∞—á–∏–Ω–∞—é—Ç –±–æ—Ä–æ—Ç—å—Å—è –∑–∞ –≤—ã–∂–∏–≤–∞–Ω–∏–µ.

        3. –≠–∫–æ–ª–æ–≥–∏—è [ecology_metric] (–≥–¥–µ):
        +10: –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–∞–π, —á–∏—Å—Ç—ã–µ –≤–æ–¥—ã, –≤–æ–∑–¥—É—Ö, —É—Å—Ç–æ–π—á–∏–≤—ã–µ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã, –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —ç–Ω–µ—Ä–≥–∏–∏.
        -10: –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å ‚Äî —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ, –º–∞—Å—Å–æ–≤–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –ª—é–¥–µ–π, –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –ø—Ä–∏—Ä–æ–¥—ã, –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞.

        4. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å [security_metric] (–≥–¥–µ):
        +10: –ü–æ–ª–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –Ω–µ—Ç –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏, –∑–∞—â–∏—Ç–∞ –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö —É–≥—Ä–æ–∑ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–∏—Ä –∏ –ø–æ—Ä—è–¥–æ–∫.
        -10: –ü–æ–ª–Ω—ã–π –∫–æ–ª–ª–∞–ø—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ ‚Äî –≤–æ–π–Ω–∞, –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∞—è –≤–æ–π–Ω–∞, —Ç–µ—Ä—Ä–æ—Ä–∏–∑–º –Ω–∞ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω—è—Ö, —Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ –æ–±—â–µ—Å—Ç–≤–∞, –ø–æ—Ç–µ—Ä—è –∫–æ–Ω—Ç—Ä–æ–ª—è.

        5. –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ [political_support_metric] (–≥–¥–µ):
        +10: –ü–æ–ª–Ω—ã–π –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç –≤–ª–∞—Å—Ç–∏, –≤–ª–∞—Å—Ç—å –ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—Å–µ–æ–±—â–∏–º —É–≤–∞–∂–µ–Ω–∏–µ–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π, —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–æ—Ä—Ä—É–ø—Ü–∏–∏.
        -10: –î–∏–∫—Ç–∞—Ç—É—Ä–∞ / –†–µ–≤–æ–ª—é—Ü–∏—è ‚Äî –ø–æ–ª–Ω—ã–π –∫—Ä–∞—Ö –¥–µ–º–æ–∫—Ä–∞—Ç–∏–∏, –¥–∏–∫—Ç–∞—Ç–æ—Ä—Å–∫–∞—è –≤–ª–∞—Å—Ç—å, —Ä–∞—Å–ø–∞–¥ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞, –Ω–∞—Ä–æ–¥ –Ω–µ –¥–æ–≤–µ—Ä—è–µ—Ç –≤–ª–∞—Å—Ç–∏.

        üìå –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞
        –¢–≤–æ–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ JSON. –ë–µ–∑ –∫–æ–¥–∞, –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π.
        –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π ```python –∏–ª–∏ –¥—Ä—É–≥–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã –∫–æ–¥–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤.  

        üìå –°—Ç—Ä—É–∫—Ç—É—Ä–∞ JSON: {json_template}

        üìå –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π (N)
        - –î–∏–∞–ø–∞–∑–æ–Ω: –æ—Ç -10 –¥–æ +10
        - –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö: —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ (integer)
        - –ó–∞–ø—Ä–µ—â–µ–Ω–æ: —Å—Ç—Ä–æ–∫–∏, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –∫–æ–¥–æ–≤—ã–µ –±–ª–æ–∫–∏, —Å–∫–æ–±–∫–∏ `()`.

        –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ JSON, –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ —Ç–µ–∫—Å—Ç–∞.

        """

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–∏ GPT
        response = await client.chat.completions.create(
            model=model,
            messages=[{"role": "user", "content": prompt}],
            max_tokens=max_tokens,
            temperature=0.7
        )

        logger.info("–û—Ç–≤–µ—Ç –æ—Ç OpenAI –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º –ø–æ–ª—É—á–µ–Ω.")
        
        metrics_data = response.choices[0].message.content.strip()  # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
        return metrics_data
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ—Ç—Ä–∏–∫: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ—Ç—Ä–∏–∫."
    
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–ø–¥–µ–π—Ç–∞ –º–µ—Ç—Ä–∏–∫ –º–∏—Ä–∞ —á–µ—Ä–µ–∑ GPT
async def update_world_metrics(world_data, initiation_details, model="gpt-4o", max_tokens=1500):
    try:
        logger.info("–ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ—Ç—Ä–∏–∫ –¥–ª—è –º–∏—Ä–∞...")

        json_template = """{
            "economy_metric": N,
            "social_stability_metric": N,
            "ecology_metric": N,
            "security_metric": N,
            "political_support_metric": N
        }"""

        prompt = f"""
        –ù–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –º–∏—Ä–∞ –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –∏–≥—Ä–æ–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–∏, –∫–∞–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –±—É–¥—É—Ç –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã.
        –ù–µ —É–∫–∞–∑—ã–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞, —Ç–æ–ª—å–∫–æ –≤–ª–∏—è–Ω–∏–µ!

        –û–ø–∏—Å–∞–Ω–∏–µ –º–∏—Ä–∞:
        {world_data}

        –ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
        {initiation_details}

        üìå –°—Ç—Ä—É–∫—Ç—É—Ä–∞ JSON: {json_template}

        üìå –ü—Ä–∞–≤–∏–ª–∞:
        - –ï—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –≤–ª–∏—è–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ, —Å—Ç–∞–≤—å `"+"`
        - –ï—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –≤–ª–∏—è–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ, —Å—Ç–∞–≤—å `"-"`
        - –ï—Å–ª–∏ –º–µ—Ç—Ä–∏–∫–∞ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è, —Å—Ç–∞–≤—å `"0"`
        - –ù–µ —É–∫–∞–∑—ã–≤–∞–π —á–∏—Å–ª–∞! –¢–æ–ª—å–∫–æ `"+", "-", "0"`

        –û—Ç–≤–µ—Ç—å —Ç–æ–ª—å–∫–æ JSON, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π, –Ω–∞—á–∏–Ω–∞—è –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—è —Ñ–∏–≥—É—Ä–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏.

        """

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–∏ GPT
        response = await client.chat.completions.create(
            model=model,
            messages=[{"role": "user", "content": prompt}],
            max_tokens=max_tokens,
            temperature=0.7
        )

        logger.info("–û—Ç–≤–µ—Ç –æ—Ç OpenAI –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º –ø–æ–ª—É—á–µ–Ω.")
        
        metrics_data = response.choices[0].message.content.strip()  # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
        return metrics_data
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ—Ç—Ä–∏–∫: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ—Ç—Ä–∏–∫."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —á–µ—Ä–µ–∑ GPT
async def generate_character(world_data, character_details, model="gpt-4o", max_tokens=600):
    try:
        logger.info("–ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞...")

        prompt = f"""
        –ù–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –º–∏—Ä–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ, —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–ª—è –∏–≥—Ä—ã –¥–æ 400 —Å–∏–º–≤–æ–ª–æ–≤.

        –û–ø–∏—Å–∞–Ω–∏–µ –º–∏—Ä–∞:
        {world_data}

        –î–µ—Ç–∞–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:
        {character_details}

        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π –¥–µ—Ç–∞–ª–µ–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –≤–∫–ª—é—á–∞—è –µ–≥–æ –ª–∏—á–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞, –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –≤ –∫—Ä–∞—Ç–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Ç–µ–∫—Å—Ç–∞.
        """

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–∏ GPT
        response = await client.chat.completions.create(
            model=model,
            messages=[{"role": "user", "content": prompt}],
            max_tokens=max_tokens,
            temperature=0.7
        )

        logger.info("–û—Ç–≤–µ—Ç –æ—Ç OpenAI –ø–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø–æ–ª—É—á–µ–Ω.")
        
        character_data = response.choices[0].message.content.strip()  # –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        return character_data
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞."
    
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ GPT
async def generate_world_news(game_year, world_data, world_metrics, model="gpt-4o", max_tokens=6800):
    try:
        logger.info("–ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π...")

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ –≥–æ–¥–∞
        if game_year < 0:
            formatted_year = f"{abs(game_year)} –≥–æ–¥ –¥–æ –Ω.—ç."
        else:
            formatted_year = f"{game_year} –≥–æ–¥ –Ω.—ç."

        prompt = f"""
        –ù–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –º–∏—Ä–∞ –∏ –º–µ—Ç—Ä–∏–∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –¥–∞–π–¥–∂–µ—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π —ç—Ç–æ–≥–æ –º–∏—Ä–∞ –¥–æ 800 —Å–∏–º–≤–æ–ª–æ–≤.

        –û–ø–∏—Å–∞–Ω–∏–µ –º–∏—Ä–∞:
        {world_data}

        –ú–µ—Ç—Ä–∏–∫–∏ –º–∏—Ä–∞:
        {world_metrics}

        –í–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π –≥–æ–¥: 
        {formatted_year}

        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π –¥–∞–π–¥–∂–µ—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π, –∫–æ—Ç–æ—Ä—ã–π –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏—Ä–∞ —ç—Ç–æ–≥–æ –≥–æ–¥–∞, –≤–∫–ª—é—á–∞—è –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è, –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –≤ –Ω–µ–º.
        –°—Ç–∏–ª—å –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∏ –æ—Ç—Ä–æ–∂–∞—Ç—å –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ —ç–ø–æ—Ö—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç (–≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π –≥–æ–¥) –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–æ–≤–∞, –¥–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫—É —ç—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
        –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã - –ø–µ—Ä–≤—ã–µ —Ä–∞–∑–≤–æ—Ä—ã –ø–æ–ø—É–ª—è—Ä–Ω–æ–π –≥–∞–∑–µ—Ç—ã –¥–ª—è –∂–∏—Ç–µ–ª–µ–π. –¢–≤–æ–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø–µ—Å—Ç—Ä—è—Ç –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—é—Ç –≤–Ω–∏–º–∞–Ω–∏–µ. –¢—ã –∏–∑–±–µ–≥–∞–µ—à—å —Å–∫—É—á–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫ 
        –∏ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–π. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ -- —É–≤–ª–µ—á—å —á–∏—Ç–∞—Ç–µ–ª—è –∏ –ø–æ–≥—Ä—É–∑–∏—Ç—å –≤ –∫—Ä—É–≥–æ–≤–æ—Ä–æ—Ç —Å–æ–±—ã—Ç–∏–π -- —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–∞ –≤—á–µ—Ä–∞, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–µ–≥–æ–¥–Ω—è –∏ —á—Ç–æ –∂–¥–µ—Ç –Ω–∞—Å –∑–∞–≤—Ç—Ä–∞.
        –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ **–∂–∏—Ä–Ω—ã–π** –∏–ª–∏ _–∫—É—Ä—Å–∏–≤_, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –¥–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π –∫–∞–ø—Å–ª–æ–∫ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ 
        –∏ –∫—Ä–∞—Ç–∫–∏—Ö –≤—ã–¥–µ–ª–µ–Ω–∏–π.
        
        """

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–∏ GPT
        response = await client.chat.completions.create(
            model=model,
            messages=[{"role": "user", "content": prompt}],
            max_tokens=max_tokens,
            temperature=0.7
        )

        logger.info("–û—Ç–≤–µ—Ç –æ—Ç OpenAI –ø–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–ª—É—á–µ–Ω.")
        
        character_data = response.choices[0].message.content.strip()  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–π–¥–∂–µ—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π
        return character_data
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π."
    
    
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∏—Ä–∞ —á–µ—Ä–µ–∑ GPT –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤
async def generate_world_changes(character_description, game_year, world_data, user_initiation, model="gpt-4o", max_tokens=800):
    try:
        logger.info("–ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–∏—Ä–∞...")  # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ –≥–æ–¥–∞
        if game_year < 0:
            formatted_year = f"{abs(game_year)} –≥–æ–¥ –¥–æ –Ω.—ç."
        else:
            formatted_year = f"{game_year} –≥–æ–¥ –Ω.—ç."
        
        prompt = f"""
        –ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
        {user_initiation}

        –û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–≥—Ä–æ–∫–∞: {character_description}
        
        –û–ø–∏—Å–∞–Ω–∏–µ –º–∏—Ä–∞:
        {world_data}

        –í–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π –≥–æ–¥: 
        {formatted_year}

        –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–∞–∫ –ø–æ–º–µ–Ω—è–µ—Ç—Å—è –º–∏—Ä —á–µ—Ä–µ–∑ 1 –≥–æ–¥ –ø–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è –≤–æ—Ç —Ç–∞–∫–æ–π –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–º–Ω–∏, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º–∏ –∏ 
        —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–∫–æ–Ω–∞–º –º–∏—Ä–∞:
        –ó–∞–∫–æ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤, –ó–∞–∫–æ–Ω —Å–ø—Ä–æ—Å–∞ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –ó–∞–∫–æ–Ω —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ —ç–∫–æ—Å–∏—Å—Ç–µ–º, –ó–∞–∫–æ–Ω –∏–Ω–µ—Ä—Ü–∏–∏ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ-–ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö, 
        –ó–∞–∫–æ–Ω –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏, –ó–∞–∫–æ–Ω ¬´–ø–æ–±–æ—á–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞¬ª, –ó–∞–∫–æ–Ω —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞,
        –ó–∞–∫–æ–Ω —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —ç–≤–æ–ª—é—Ü–∏–∏, –ó–∞–∫–æ–Ω –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏, –ó–∞–∫–æ–Ω –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏, –ó–∞–∫–æ–Ω —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–π –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, 
        –ó–∞–∫–æ–Ω —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ó–∞–∫–æ–Ω —ç–Ω—Ç—Ä–æ–ø–∏–∏ (–Ω–µ–∏–∑–±–µ–∂–Ω–æ—Å—Ç—å —Ö–∞–æ—Å–∞ –∏ —Ä–∞—Å–ø–∞–¥–∞),
        –í –º–∏—Ä–µ –Ω–µ—Ç –º–∞–≥–∏–∏, –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –æ–±—â–µ–ø—Ä–∏–Ω—è—Ç—ã–º –∑–∞–∫–æ–Ω–∞–º —Ñ–∏–∑–∏–∫–∏ –∏ —Ö–∏–º–∏–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –º–∏—Ä–∞.
        
        –ü–æ–ø—Ä–æ–±—É–π –æ—Ü–µ–Ω–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø–∏—Å–∞–Ω–∏—è –º–∏—Ä–∞ –∏ –µ–≥–æ —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ –¥–µ–ª–∞–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º, 
        –Ω–æ –≤—Å–µ –µ—â–µ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –∫—É–¥–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –±—É–¥—É—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã —Ä–µ—Å—É—Ä—Å—ã -- –Ω–µ –¥–æ–¥—É–º—ã–≤–∞–π –∑–∞ –Ω–µ–≥–æ –∏ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–π –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É –±—É–∫–≤–∞–ª—å–Ω–æ,
        —Ç–∞–∫, –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∑–∞–∫–æ–Ω—ã -- —Ç–æ–ø–æ—Ä–Ω–æ, –±—É–∫–≤–∞–ª—å–Ω–æ, —Å –ø–æ–∏—Å–∫–æ–º –¥—ã—Ä –∏ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è—Ö –≥—Ä–∞–∂–¥–∞–Ω–∞–º–∏.
        –ò–º–µ–π –≤–≤–∏–¥—É, —á—Ç–æ —É –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π –µ—Å—Ç—å –ø—Ä–µ–¥–µ–ª - –≤–ø–ª–æ—Ç—å –¥–æ —Ä–µ–≤–æ–ª—é—Ü–∏–∏ –∏–ª–∏ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞, –µ—Å–ª–∏ —Å–∏—Ç—É–∞—Ü–∏—é –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        –¢–∞–∫–∂–µ, –µ—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –≤—ã–ø–∞–¥–∞–µ—Ç –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å–æ–±—ã—Ç–∏–π - —Ç—ã –º–æ–∂–µ—à—å –µ—ë –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –ø–æ –ø—Ä–∏—á–∏–Ω–µ –Ω–µ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏ –∏–ª–∏ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∑–∞–∫–æ–Ω–∞–º –º–∏—Ä–∞.
        –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á–∏—Ç—ã–≤–∞–π —Ç—Ä–µ–Ω–¥ –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é –º–∏—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –æ–ø–∏—Å—ã–≤–∞–ª —Ä–∞–Ω–µ–µ, –∏ –Ω–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á—å –µ–º—É. –û–ø–∏—Ä–∞–π—Å—è –Ω–∞ –Ω–µ–≥–æ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —Å –±–æ–ª—å—à–µ–π 
        —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç—å—é.
        –ï—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤–Ω–µ–¥—Ä–∏—Ç—å –∑–∞ –≥–æ–¥ -- —É—á–∏—Ç—ã–≤–∞–π —ç—Ç–æ –∏ –≤–Ω–µ–¥—Ä–∏ —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—É—é —á–∞—Å—Ç—å –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –≤–æ—Ç —ç—Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –≤ –º–∏—Ä–µ. –ú–æ–¥–µ–ª–∏—Ä—É–π 
        —Å–∏—Ç—É–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π.

        –û—Ñ–æ—Ä–º–∏ —Ç–µ–∫—Å—Ç –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–≥—Ä–æ–∫–∞, –≤–æ—Ç –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ: {character_description}, —á—Ç–æ–±—ã –∏–≥—Ä–æ–∫ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª —Å–µ–±—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω—ã–º –≤ –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∏—Ä–∞.
        –ü—Ä–∏—à–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∏—Å—Ö–æ–¥—è –∏–∑ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç –ª–∏—Ü–∞ –µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–æ 600 —Å–∏–º–≤–æ–ª–æ–≤ --
        –æ–¥–Ω–æ–≥–æ –∏–∑ –∂–∏—Ç–µ–ª–µ–π —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω—ã. –ì–ª–∞–≤–Ω–æ–µ –¥–∞—Ç—å –∏–≥—Ä–æ–∫—É –æ—â—É—â–µ–Ω–∏–µ, —á—Ç–æ NPC –∂–∏–≤—É—Ç –≤ —ç—Ç–æ–º –º–∏—Ä–µ –∏ –µ–≥–æ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –≤–ª–∏—è—é—Ç –Ω–∞ –∂–∏–∑–Ω—å —Ä–µ–∞–ª—å–Ω—ã—Ö –ª—é–¥–µ–π. 
        –ò—Å–ø–æ–ª—å–∑—É–π —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è (–º–æ–∂–µ—à—å –≥–æ–≤–æ—Ä–∏—Ç—å –≤ —Å—Ç–∏–ª–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏–∑ –º–µ–¥–∏–∞–∫—É–ª—å—Ç—É—Ä—ã), —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å —ç–º–æ—Ü–∏–∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞, 
        –º–æ–∂–µ—à—å –¥–∞–∂–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–∞–∫–∏–º–∏-—Ç–æ –µ–≥–æ –ª–∏—á–Ω—ã–º–∏ –∏—Å—Ç–æ—Ä–∏—è–º–∏. –ú–æ–∂–µ—à—å –¥–∞–∂–µ –∏–Ω–æ–≥–¥–∞ –ª–æ–º–∞—Ç—å —á–µ—Ç–≤–µ—Ä—Ç—É—é —Å—Ç–µ–Ω—É -- –æ–±—â–µ–Ω–∏–µ —Å–æ —Å–≤–æ–∏–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º –≤ –∏–≥—Ä–µ –¥–ª—è –∏–≥—Ä–æ–∫–∞ -- –≥–ª–∞–≤–Ω—ã–π
        —Å–ø–æ—Å–æ–± –ø–æ–∑–Ω–∞–Ω–∏—è –º–∏—Ä–∞ –∏ –µ–≥–æ –º–µ—Ö–∞–Ω–∏–∫.
        
        """
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–∏ GPT
        response = await client.chat.completions.create(
            model=model,
            messages=[{"role": "user", "content": prompt}],
            max_tokens=max_tokens,
            temperature=0.75
        )
        
        logger.info("–û—Ç–≤–µ—Ç –æ—Ç OpenAI –ø–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –º–∏—Ä–∞ –ø–æ–ª—É—á–µ–Ω.")
        
        world_data = response.choices[0].message.content.strip()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º .content –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        return world_data
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OpenAI –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –º–∏—Ä–∞: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –º–∏—Ä–∞."
    